{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ResultService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.conversionUrl = environment.baseUrl;\n    this.subject = new Subject();\n  }\n  onClickConversionFormEvent(value) {\n    this.subject.next(value);\n  }\n  getOnClickConversionFormEvent() {\n    return this.subject.asObservable();\n  }\n  getConvertedWord(number) {\n    return this.httpClient.get(`${this.conversionUrl}/${number}`);\n  }\n}\nResultService.ɵfac = function ResultService_Factory(t) {\n  return new (t || ResultService)(i0.ɵɵinject(i1.HttpClient));\n};\nResultService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ResultService,\n  factory: ResultService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;AAC1D,SAAqBC,OAAO,QAAQ,MAAM;;;AAK1C,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAHtB,kBAAa,GAAUJ,WAAW,CAACK,OAAO;IAC1C,YAAO,GAAG,IAAIJ,OAAO,EAAU;EAEO;EAE9CK,0BAA0B,CAACC,KAAY;IACrC,IAAI,CAACC,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC;EAC1B;EAEAG,6BAA6B;IAC3B,OAAO,IAAI,CAACF,OAAO,CAACG,YAAY,EAAE;EACpC;EAEOC,gBAAgB,CAACC,MAAa;IACnC,OAAO,IAAI,CAACT,UAAU,CAACU,GAAG,CAAS,GAAG,IAAI,CAACC,aAAa,IAAIF,MAAM,EAAE,CAAC;EACvE;;AAjBWX,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAc,SAAbd,aAAa;EAAAe,YAFZ;AAAM","names":["environment","Subject","ResultService","constructor","httpClient","baseUrl","onClickConversionFormEvent","value","subject","next","getOnClickConversionFormEvent","asObservable","getConvertedWord","number","get","conversionUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\chris\\source\\repos\\NumberToWordConversion\\NumberToWordConversion.Web\\ClientApp\\src\\app\\result\\result.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResultService {\n\n  private conversionUrl:string = environment.baseUrl;\n  private subject = new Subject<string>();\n\n  constructor(private httpClient: HttpClient) { }\n\n  onClickConversionFormEvent(value:string) {\n    this.subject.next(value);\n  }\n\n  getOnClickConversionFormEvent(): Observable<string>{\n    return this.subject.asObservable();\n  }\n\n  public getConvertedWord(number:string){\n    return this.httpClient.get<string>(`${this.conversionUrl}/${number}`)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}